// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using DndFeatsJson;
//
//    var the5EFeats = The5EFeats.FromJson(jsonString);

namespace DndFeatsJson
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class The5EFeats
    {
        [JsonProperty("index")]
        public string Index { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("prerequisites")]
        public List<Prerequisite> Prerequisites { get; set; }

        [JsonProperty("desc")]
        public List<string> Desc { get; set; }

        [JsonProperty("url")]
        public string Url { get; set; }
    }

    public partial class Prerequisite
    {
        [JsonProperty("ability_score")]
        public AbilityScore AbilityScore { get; set; }

        [JsonProperty("minimum_score")]
        public long MinimumScore { get; set; }
    }

    public partial class AbilityScore
    {
        [JsonProperty("index")]
        public string Index { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("url")]
        public string Url { get; set; }
    }

    public partial class The5EFeats
    {
        public static List<The5EFeats> FromJson(string json) => JsonConvert.DeserializeObject<List<The5EFeats>>(json, DndFeatsJson.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this List<The5EFeats> self) => JsonConvert.SerializeObject(self, DndFeatsJson.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
